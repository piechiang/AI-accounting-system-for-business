version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: ai_accounting_db
    environment:
      POSTGRES_USER: ai_accounting
      POSTGRES_PASSWORD: ai_accounting_password
      POSTGRES_DB: ai_accounting
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_accounting"]
      interval: 5s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai_accounting_backend
    environment:
      - DATABASE_URL=postgresql://ai_accounting:ai_accounting_password@db:5432/ai_accounting
      - SECRET_KEY=your-super-secret-key-change-this-in-production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ALLOWED_HOSTS=["http://localhost:3000", "http://localhost:5173"]
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./datasets:/app/datasets
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai_accounting_frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_BASE_URL=http://localhost:8000/api/v1
    command: npm run dev -- --host 0.0.0.0

  # Redis (for caching and background tasks)
  redis:
    image: redis:7-alpine
    container_name: ai_accounting_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data: